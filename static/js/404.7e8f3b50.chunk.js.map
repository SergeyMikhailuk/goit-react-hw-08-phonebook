{"version":3,"file":"static/js/404.7e8f3b50.chunk.js","mappings":"4QAKO,MAAMA,GAAOC,EAAAA,EAAAA,GAAOC,EAAAA,GAAPD,CAAkBE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,wEAMzBC,GAAeJ,EAAAA,EAAAA,GAAOK,EAAAA,GAAPL,CAA0BM,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,mEAMzCI,EAAeP,EAAAA,EAAOQ,IAAGC,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,kCAIzBO,GAAQV,EAAAA,EAAAA,GAAOW,EAAAA,EAAPX,CAAiBY,IAAAA,GAAAT,EAAAA,EAAAA,GAAA,QAEzBU,GAASb,EAAAA,EAAAA,GAAOc,EAAAA,EAAPd,CAAiBe,IAAAA,GAAAZ,EAAAA,EAAAA,GAAA,6EAM1Ba,GAAOhB,EAAAA,EAAAA,GAAOiB,EAAAA,GAAPjB,CAAiBkB,IAAAA,GAAAf,EAAAA,EAAAA,GAAA,oC,aCrBrC,MAAMgB,EAA+C,CACnDC,KAAM,GACNC,MAAO,GACPC,SAAU,IAGNC,EAAmBC,EAAAA,GAAW,CAClCJ,KAAMI,EAAAA,KAAaC,SAAS,oBAC5BJ,MAAOG,EAAAA,KAAaC,SAAS,qBAC7BH,SAAUE,EAAAA,KAEPE,IAAI,GACJC,IAAI,IACJC,UAAU,wBACVH,SAAS,0BA2Dd,EAxDyBI,KACvB,MAAMC,GAAWC,EAAAA,EAAAA,OACVC,GAAcC,UAAWC,KAAoBC,EAAAA,EAAAA,MAUpD,OACEC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAM,CACLrB,cAAeA,EACfsB,SAZeC,MACnBC,EAAqCC,KAEjC,IADJ,UAAEC,GAAyDD,QAErDZ,EAAWW,GACjBb,EAAS,aACTe,GAAW,EAOPtB,iBAAkBA,EAAiBe,UAEnCF,EAAAA,EAAAA,MAACrC,EAAI,CAAAuC,SAAA,EACHF,EAAAA,EAAAA,MAAC7B,EAAY,CAAA+B,SAAA,EACXC,EAAAA,EAAAA,KAACO,EAAAA,GAAK,CAACC,GAAIrC,EAAOsC,KAAK,OAAO5B,KAAK,OAAO6B,MAAO,OAAQC,aAAa,SACtEX,EAAAA,EAAAA,KAACnC,EAAY,CAACgB,KAAK,OAAO+B,UAAU,YAGtCf,EAAAA,EAAAA,MAAC7B,EAAY,CAAA+B,SAAA,EACXC,EAAAA,EAAAA,KAACO,EAAAA,GAAK,CAACC,GAAIrC,EAAOsC,KAAK,OAAO5B,KAAK,QAAQ6B,MAAO,QAASC,aAAa,eACxEX,EAAAA,EAAAA,KAACnC,EAAY,CAACgB,KAAK,QAAQ+B,UAAU,YAGvCf,EAAAA,EAAAA,MAAC7B,EAAY,CAAA+B,SAAA,EACXC,EAAAA,EAAAA,KAACO,EAAAA,GAAK,CACJC,GAAIrC,EACJsC,KAAK,WACL5B,KAAK,WACL6B,MAAO,WACPC,aAAa,kBAEfX,EAAAA,EAAAA,KAACnC,EAAY,CAACgB,KAAK,WAAW+B,UAAU,YAG1CZ,EAAAA,EAAAA,KAAC1B,EAAM,CAACmC,KAAK,SAASI,SAAUlB,EAAeI,SAAC,kBAMpDC,EAAAA,EAAAA,KAACvB,EAAI,CAACqC,GAAI,SAASf,UACjBC,EAAAA,EAAAA,KAAC1B,EAAM,CAACmC,KAAK,SAASI,SAAUlB,EAAeI,SAAC,0BAIjD,C","sources":["containers/pages/Registration/styled.ts","containers/pages/Registration/index.tsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Button as MuiButton, TextField } from '@mui/material';\nimport { Form as FormikForm, ErrorMessage as FormikErrorMessage } from 'formik';\nimport { Link as ReactLink } from 'react-router-dom';\n\nexport const Form = styled(FormikForm)`\n  display: flex;\n  flex-direction: column;\n  width: 300px;\n`;\n\nexport const ErrorMessage = styled(FormikErrorMessage)`\n  color: red;\n  margin-top: 4px;\n  padding-left: 8px;\n`;\n\nexport const InputWrapper = styled.div`\n  margin-bottom: 20px;\n`;\n\nexport const Input = styled(TextField)``;\n\nexport const Button = styled(MuiButton)`\n  width: 300px;\n  display: flex;\n  justify-content: flex-start;\n`;\n\nexport const Link = styled(ReactLink)`\n  text-decoration: none;\n`;\n","import { useNavigate } from 'react-router-dom';\nimport { Formik, Field, FormikHelpers } from 'formik';\nimport * as yup from 'yup';\n\nimport { useCreateUserMutation } from 'store/auth/auth-operations';\n\nimport { Form, ErrorMessage, InputWrapper, Input, Button, Link } from './styled';\n\nconst initialValues: RegistrationFormInitialValues = {\n  name: '',\n  email: '',\n  password: '',\n};\n\nconst validationSchema = yup.object({\n  name: yup.string().required('name is required'),\n  email: yup.string().required('email is required'),\n  password: yup\n    .string()\n    .min(8)\n    .max(12)\n    .typeError('from 8 to 12 symbols')\n    .required('password is required'),\n});\n\nconst RegistrationPage = () => {\n  const navigate = useNavigate();\n  const [createUser, { isLoading: isCreatingUser }] = useCreateUserMutation();\n\n  const handleSubmit = async (\n    values: RegistrationFormInitialValues,\n    { resetForm }: FormikHelpers<RegistrationFormInitialValues>\n  ) => {\n    await createUser(values);\n    navigate('/contacts');\n    resetForm();\n  };\n  return (\n    <>\n      <Formik\n        initialValues={initialValues}\n        onSubmit={handleSubmit}\n        validationSchema={validationSchema}\n      >\n        <Form>\n          <InputWrapper>\n            <Field as={Input} type=\"text\" name=\"name\" label={'Name'} autoComplete=\"off\" />\n            <ErrorMessage name=\"name\" component=\"div\" />\n          </InputWrapper>\n\n          <InputWrapper>\n            <Field as={Input} type=\"text\" name=\"email\" label={'Email'} autoComplete=\"new-email\" />\n            <ErrorMessage name=\"email\" component=\"div\" />\n          </InputWrapper>\n\n          <InputWrapper>\n            <Field\n              as={Input}\n              type=\"password\"\n              name=\"password\"\n              label={'Password'}\n              autoComplete=\"new-password\"\n            />\n            <ErrorMessage name=\"password\" component=\"div\" />\n          </InputWrapper>\n\n          <Button type=\"submit\" disabled={isCreatingUser}>\n            Sign Up\n          </Button>\n        </Form>\n      </Formik>\n\n      <Link to={'/login'}>\n        <Button type=\"button\" disabled={isCreatingUser}>\n          I have an account\n        </Button>\n      </Link>\n    </>\n  );\n};\n\nexport default RegistrationPage;\n\nexport type RegistrationFormInitialValues = {\n  name: string;\n  email: string;\n  password: string;\n};\n"],"names":["Form","styled","FormikForm","_templateObject","_taggedTemplateLiteral","ErrorMessage","FormikErrorMessage","_templateObject2","InputWrapper","div","_templateObject3","Input","TextField","_templateObject4","Button","MuiButton","_templateObject5","Link","ReactLink","_templateObject6","initialValues","name","email","password","validationSchema","yup","required","min","max","typeError","RegistrationPage","navigate","useNavigate","createUser","isLoading","isCreatingUser","useCreateUserMutation","_jsxs","_Fragment","children","_jsx","Formik","onSubmit","async","values","_ref","resetForm","Field","as","type","label","autoComplete","component","disabled","to"],"sourceRoot":""}